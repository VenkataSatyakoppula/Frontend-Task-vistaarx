{"version":3,"sources":["images/user_pic.jpg","images/close.svg","components/retailer_card.js","App.js","reportWebVitals.js","index.js"],"names":["retailer_card","props","state","isConnected","items","CheckConnectstate","bind","item","users","Object","assign","this","index","findIndex","o","id","connected","setState","console","log","getItems","Jsondata","splice","className","slice","map","onClick","DeleteCard","src","Closeimg","alt","Img","name","company","connections","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAe,MAA0B,qCCA1B,MAA0B,kC,cCkF1BA,E,kDA5EX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,aAAa,EACbC,MAAM,IAEV,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBANV,E,qDASnB,SAAkBC,GACd,IAAMC,EAAQC,OAAOC,OAAO,GAAGC,KAAKT,MAAME,OACpCQ,EAAQJ,EAAMK,WAAU,SAAUC,GACpC,OAAOA,EAAEC,KAAOR,EAAKQ,MAGrBR,EAAKS,WACLR,EAAMI,GAAOI,WAAY,EACzBL,KAAKM,SAAS,CACVb,MAAQI,MAGZA,EAAMI,GAAOI,WAAY,EACzBE,QAAQC,IAAIX,GACZG,KAAKM,SAAS,CACVb,MAAQI,O,+BAIpB,WACIG,KAAKS,a,sBAET,WACIT,KAAKM,SAAS,CACV,MAASI,M,wBAGjB,SAAWd,GACP,IAAMC,EAAQC,OAAOC,OAAO,GAAGC,KAAKT,MAAME,OACpCQ,EAAQJ,EAAMK,WAAU,SAAUC,GACpC,OAAOA,EAAEC,KAAOR,EAAKQ,OAEX,IAAXH,GACCJ,EAAMc,OAAOV,EAAM,GAEvBD,KAAKM,SAAS,CACV,MAAST,M,oBAIjB,WAAU,IAAD,OACL,OACI,qBAAKe,UAAY,aAAjB,SACKZ,KAAKT,MAAME,MAAMoB,MAAM,EAAE,GAAGC,KAAI,SAAAlB,GAC7B,OACA,sBAAKgB,UAAU,OAAf,UACA,qBAAKG,QAAW,kBAAI,EAAKC,WAAWpB,IAAOgB,UAAU,QAAQK,IAAKC,EAAUC,IAAI,UAChF,+BACI,qBAAMF,IAAKG,EAAKR,UAAU,aAAcO,IAAI,SAGhD,6BAAKvB,EAAKyB,OACV,4BAAIzB,EAAK0B,UACT,sBAAKV,UAAU,WAAf,UACI,+BAAOhB,EAAK2B,cACZ,kDAEH3B,EAAKS,UAAW,wBAAQO,UAAU,UAAUG,QAAS,kBAAM,EAAKrB,kBAAkBE,IAAlE,2BAAkG,wBAAQgB,UAAU,UAAUG,QAAS,kBAAM,EAAKrB,kBAAkBE,IAAlE,uBAZxFA,EAAKQ,a,GAvDxBoB,aCObC,MATf,WACE,OACE,sBAAKb,UAAU,YAAf,UACE,mBAAGA,UAAU,OAAb,SAAoB,8DAClB,cAAC,EAAD,QCKOc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.63a6e821.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user_pic.6ba7eea0.jpg\";","export default __webpack_public_path__ + \"static/media/close.47fa2ba7.svg\";","import React, { Component } from 'react'\nimport Img from '../images/user_pic.jpg'\nimport Closeimg from '../images/close.svg'\nimport '../App.css'\nimport Jsondata from '../Jsondata/person.json'\nclass retailer_card extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isConnected: true,\n            items:[]\n        }\n        this.CheckConnectstate = this.CheckConnectstate.bind(this)\n    }\n\n    CheckConnectstate(item){\n        const users = Object.assign([],this.state.items);\n        const index = users.findIndex(function (o) {\n            return o.id === item.id;\n        })\n\n        if (item.connected) {\n            users[index].connected = false;\n            this.setState({\n                items : users\n            })\n        }else{\n            users[index].connected = true;\n            console.log(users)\n            this.setState({\n                items : users\n            })\n        }\n    }\n    componentDidMount(){\n        this.getItems();\n    }\n    getItems(){\n        this.setState({\n            'items': Jsondata\n        })\n    }\n    DeleteCard(item){\n        const users = Object.assign([],this.state.items);\n        const index = users.findIndex(function (o) {\n            return o.id === item.id;\n        })\n        if(index !== -1){\n            users.splice(index,1);\n        }\n        this.setState({\n            'items': users\n        })\n        \n    }\n    render() {\n        return (\n            <div className = \"Cards-view\">\n                {this.state.items.slice(0,8).map(item=>{\n                    return (\n                    <div className=\"card\" key={item.id}>\n                    <img onClick = {()=>this.DeleteCard(item)} className=\"close\" src={Closeimg} alt=\"close\"/>\n                    <span>\n                        <img  src={Img} className=\"profileImg\"  alt=\"hi\" />\n                    </span>\n                    \n                    <h4>{item.name}</h4>\n                    <p>{item.company}</p>\n                    <div className=\"InnerBox\">\n                        <span>{item.connections}</span>\n                        <span>Connections</span>\n                    </div>\n                    {item.connected?(<button className=\"Connect\" onClick={() => this.CheckConnectstate(item)}>Request sent!</button>):(<button className=\"Connect\" onClick={() => this.CheckConnectstate(item)}>Connect</button>)}\n                    \n                </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default retailer_card\n","import React from 'react'\nimport './App.css'\nimport ReatilerCard from './components/retailer_card'\nfunction App() {\n  return (\n    <div className=\"Container\">\n      <p className=\"line\"><span>More suggestions for you</span></p>\n        <ReatilerCard></ReatilerCard>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}